geom_bar(stat = 'identity', fill = 'lightblue') +
geom_point(mapping = aes(x=Year, y=A_t), color = 'red') +
labs(y='Cumulative Volume(bln units)', x='') +
theme(panel.background = element_blank(),
axis.text.y = element_text(size = 8)) + theme_minimal()
grid.arrange(g4, g5, ncol = 2,
top = textGrob('Diffusion Prediction for Innovation',
gp = gpar(fontsize = 16)))
knitr::opts_chunk$set(echo = TRUE, warning=F, message = F)
library(dplyr)
library(ggplot2)
library(diffusion)
library(readxl)
library(gridExtra)
library(grid)
gnss_unit_pirce <- mean(c(500, 2000)) # taking the mean unit price for each
indoor_mapping_tech_unit_price <- mean(c(8000, 30000))
surveying_equipment_unit_price <- mean(c(200, 1400))
gnss <- read_excel('gnss.xlsx', sheet='Data') %>%
slice(-c(1:2)) %>% # remove unmecessary rows
rename("Year" =`GNSS & positioning market revenue by technology 2013-2020`,
"GNSS" = `...2`, "Indoor" = `...3` , "Surveying" = `...4`) %>%
mutate(across(everything(), ~gsub("\\*$", "", .))) %>% # remove * to convert into int
mutate(Year = as.integer(Year), # type conversions
GNSS = as.double(GNSS) ,
Indoor = as.double(Indoor) ,
Surveying = as.double(Surveying)) %>%
mutate(GNSS = GNSS / gnss_unit_pirce, # getting quantity for each
Indoor = Indoor / indoor_mapping_tech_unit_price,
Surveying = Surveying / surveying_equipment_unit_price) %>%
group_by(Year) %>%
mutate(Volume = sum(GNSS, Indoor, Surveying))%>%
ungroup() %>%
mutate(Cumulative_Volume = cumsum(Volume))
# grouping by the year and calculating the total quantity over all segments
head(gnss, 3)
g0 <- ggplot(data = gnss, aes(x = Year, y = Volume)) +
geom_bar(stat = 'identity', fill = 'lightblue') +
labs(y = 'Volume(bln units)', x = '' ) +
theme(panel.background = element_blank()) + theme_minimal()
g1 <- ggplot(data = gnss, aes(x = Year, y = Cumulative_Volume)) +
geom_bar(stat = 'identity', fill = 'lightblue') +
labs(y = 'Cumulative Volume(bln units)' , x = '') +
theme(panel.background = element_blank()) + theme_minimal()
grid.arrange(g0, g1, ncol = 2,
top = textGrob('Positioning systems adoption over time',
gp = gpar(fontsize = 16)))
diff_m = diffusion(gnss$Volume) # fit the model
p=round(diff_m$w,4)[1] # get each parameter from w={p,q,m} parameter set
q=round(diff_m$w,4)[2]
m=round(diff_m$w,4)[3]
diff_m
bass.f <- function(t,p,q){
((p+q)^2/p)*exp(-(p+q)*t)/
(1+(q/p)*exp(-(p+q)*t))^2
}
bass.F <- function(t,p,q){
(1-exp(-(p+q)*t))/
(1+(q/p)*exp(-(p+q)*t))
}
g2 <- ggplot(data.frame(t = c(1:length(gnss$Year))), aes(t)) +
stat_function(fun = bass.f, args = c(p, q)) +
labs(title = 'f(t)') +
theme(panel.background = element_blank()) + theme_minimal()
g3 <- ggplot(data.frame(t = c(1:length(gnss$Year))), aes(t)) +
stat_function(fun = bass.F, args = c(p, q)) +
labs(title = 'F(t)') +
theme(panel.background = element_blank()) + theme_minimal()
grid.arrange(g2,g3, ncol = 2,
top = textGrob('Bass Functions',
gp = gpar(fontsize = 16)))
sgnss$a_t = bass.f(1:length(gnss$Year), p , q )*m
knitr::opts_chunk$set(echo = TRUE, warning=F, message = F)
library(dplyr)
library(ggplot2)
library(diffusion)
library(readxl)
library(gridExtra)
library(grid)
gnss_unit_pirce <- mean(c(500, 2000)) # taking the mean unit price for each
indoor_mapping_tech_unit_price <- mean(c(8000, 30000))
surveying_equipment_unit_price <- mean(c(200, 1400))
gnss <- read_excel('gnss.xlsx', sheet='Data') %>%
slice(-c(1:2)) %>% # remove unmecessary rows
rename("Year" =`GNSS & positioning market revenue by technology 2013-2020`,
"GNSS" = `...2`, "Indoor" = `...3` , "Surveying" = `...4`) %>%
mutate(across(everything(), ~gsub("\\*$", "", .))) %>% # remove * to convert into int
mutate(Year = as.integer(Year), # type conversions
GNSS = as.double(GNSS) ,
Indoor = as.double(Indoor) ,
Surveying = as.double(Surveying)) %>%
mutate(GNSS = GNSS / gnss_unit_pirce, # getting quantity for each
Indoor = Indoor / indoor_mapping_tech_unit_price,
Surveying = Surveying / surveying_equipment_unit_price) %>%
group_by(Year) %>%
mutate(Volume = sum(GNSS, Indoor, Surveying))%>%
ungroup() %>%
mutate(Cumulative_Volume = cumsum(Volume))
# grouping by the year and calculating the total quantity over all segments
head(gnss, 3)
g0 <- ggplot(data = gnss, aes(x = Year, y = Volume)) +
geom_bar(stat = 'identity', fill = 'lightblue') +
labs(y = 'Volume(bln units)', x = '' ) +
theme(panel.background = element_blank()) + theme_minimal()
g1 <- ggplot(data = gnss, aes(x = Year, y = Cumulative_Volume)) +
geom_bar(stat = 'identity', fill = 'lightblue') +
labs(y = 'Cumulative Volume(bln units)' , x = '') +
theme(panel.background = element_blank()) + theme_minimal()
grid.arrange(g0, g1, ncol = 2,
top = textGrob('Positioning systems adoption over time',
gp = gpar(fontsize = 16)))
diff_m = diffusion(gnss$Volume) # fit the model
p=round(diff_m$w,4)[1] # get each parameter from w={p,q,m} parameter set
q=round(diff_m$w,4)[2]
m=round(diff_m$w,4)[3]
diff_m
bass.f <- function(t,p,q){
((p+q)^2/p)*exp(-(p+q)*t)/
(1+(q/p)*exp(-(p+q)*t))^2
}
bass.F <- function(t,p,q){
(1-exp(-(p+q)*t))/
(1+(q/p)*exp(-(p+q)*t))
}
g2 <- ggplot(data.frame(t = c(1:length(gnss$Year))), aes(t)) +
stat_function(fun = bass.f, args = c(p, q)) +
labs(title = 'f(t)') +
theme(panel.background = element_blank()) + theme_minimal()
g3 <- ggplot(data.frame(t = c(1:length(gnss$Year))), aes(t)) +
stat_function(fun = bass.F, args = c(p, q)) +
labs(title = 'F(t)') +
theme(panel.background = element_blank()) + theme_minimal()
grid.arrange(g2,g3, ncol = 2,
top = textGrob('Bass Functions',
gp = gpar(fontsize = 16)))
gnss$a_t = bass.f(1:length(gnss$Year), p , q )*m
gnss$A_t = bass.F(1:length(gnss$Year), p , q )*m
g4 <- ggplot(data = gnss, aes(x = Year, y = Volume)) +
geom_bar(stat = 'identity', fill = 'lightblue') +
geom_point(mapping = aes(x=Year, y=a_t), color = 'red') +
labs(y = 'Volume(bln units)', x = '') +
theme(panel.background = element_blank(),
axis.text.y = element_text(size = 8)) + theme_minimal()
g5 <- ggplot(data = gnss, aes(x = Year, y = Cumulative_Volume)) +
geom_bar(stat = 'identity', fill = 'lightblue') +
geom_point(mapping = aes(x=Year, y=A_t), color = 'red') +
labs(y='Cumulative Volume(bln units)', x='') +
theme(panel.background = element_blank(),
axis.text.y = element_text(size = 8)) + theme_minimal()
grid.arrange(g4, g5, ncol = 2,
top = textGrob('Diffusion Prediction for Innovation',
gp = gpar(fontsize = 16)))
data.frame(Predicted=log(q/p)/(p+q),
Actual=which.max(gnss$Volume))
data.frame(Predicted=log(q/p)/(p+q),
Actual=which.max(gnss$Volume))
knitr::opts_chunk$set(echo = TRUE, warning=F, message = F)
library(dplyr)
library(ggplot2)
library(diffusion)
library(readxl)
library(gridExtra)
library(grid)
gnss_unit_pirce <- mean(c(500, 2000)) # taking the mean unit price for each
indoor_mapping_tech_unit_price <- mean(c(8000, 30000))
surveying_equipment_unit_price <- mean(c(200, 1400))
gnss <- read_excel('gnss.xlsx', sheet='Data') %>%
slice(-c(1:2)) %>% # remove unmecessary rows
rename("Year" =`GNSS & positioning market revenue by technology 2013-2020`,
"GNSS" = `...2`, "Indoor" = `...3` , "Surveying" = `...4`) %>%
mutate(across(everything(), ~gsub("\\*$", "", .))) %>% # remove * to convert into int
mutate(Year = as.integer(Year), # type conversions
GNSS = as.double(GNSS) ,
Indoor = as.double(Indoor) ,
Surveying = as.double(Surveying)) %>%
mutate(GNSS = GNSS / gnss_unit_pirce, # getting quantity for each
Indoor = Indoor / indoor_mapping_tech_unit_price,
Surveying = Surveying / surveying_equipment_unit_price) %>%
group_by(Year) %>%
mutate(Volume = sum(GNSS, Indoor, Surveying))%>%
ungroup() %>%
mutate(Cumulative_Volume = cumsum(Volume))
# grouping by the year and calculating the total quantity over all segments
head(gnss, 3)
g0 <- ggplot(data = gnss, aes(x = Year, y = Volume)) +
geom_bar(stat = 'identity', fill = 'lightblue') +
labs(y = 'Volume(bln units)', x = '' ) +
theme(panel.background = element_blank()) + theme_minimal()
g1 <- ggplot(data = gnss, aes(x = Year, y = Cumulative_Volume)) +
geom_bar(stat = 'identity', fill = 'lightblue') +
labs(y = 'Cumulative Volume(bln units)' , x = '') +
theme(panel.background = element_blank()) + theme_minimal()
grid.arrange(g0, g1, ncol = 2,
top = textGrob('Positioning systems adoption over time',
gp = gpar(fontsize = 16)))
diff_m = diffusion(gnss$Volume) # fit the model
p=round(diff_m$w,4)[1] # get each parameter from w={p,q,m} parameter set
q=round(diff_m$w,4)[2]
m=round(diff_m$w,4)[3]
diff_m
bass.f <- function(t,p,q){
((p+q)^2/p)*exp(-(p+q)*t)/
(1+(q/p)*exp(-(p+q)*t))^2
}
bass.F <- function(t,p,q){
(1-exp(-(p+q)*t))/
(1+(q/p)*exp(-(p+q)*t))
}
g2 <- ggplot(data.frame(t = c(1:length(gnss$Year))), aes(t)) +
stat_function(fun = bass.f, args = c(p, q)) +
labs(title = 'f(t)') +
theme(panel.background = element_blank()) + theme_minimal()
g3 <- ggplot(data.frame(t = c(1:length(gnss$Year))), aes(t)) +
stat_function(fun = bass.F, args = c(p, q)) +
labs(title = 'F(t)') +
theme(panel.background = element_blank()) + theme_minimal()
grid.arrange(g2,g3, ncol = 2,
top = textGrob('Bass Functions',
gp = gpar(fontsize = 16)))
gnss$a_t = bass.f(1:length(gnss$Year), p , q )*m
gnss$A_t = bass.F(1:length(gnss$Year), p , q )*m
g4 <- ggplot(data = gnss, aes(x = Year, y = Volume)) +
geom_bar(stat = 'identity', fill = 'lightblue') +
geom_point(mapping = aes(x=Year, y=a_t), color = 'red') +
labs(y = 'Volume(bln units)', x = '') +
theme(panel.background = element_blank(),
axis.text.y = element_text(size = 8)) + theme_minimal()
g5 <- ggplot(data = gnss, aes(x = Year, y = Cumulative_Volume)) +
geom_bar(stat = 'identity', fill = 'lightblue') +
geom_point(mapping = aes(x=Year, y=A_t), color = 'red') +
labs(y='Cumulative Volume(bln units)', x='') +
theme(panel.background = element_blank(),
axis.text.y = element_text(size = 8)) + theme_minimal()
grid.arrange(g4, g5, ncol = 2,
top = textGrob('Diffusion Prediction for Innovation',
gp = gpar(fontsize = 16)))
data.frame(Predicted=log(q/p)/(p+q),
Actual=which.max(gnss$Volume))
rbind(Predicted=log(q/p)/(p+q),
Actual=which.max(gnss$Volume))
ggplot(data = peak, aes(q))  +
geom_bar(stat = 'identity')
peak <- rbind(Predicted=log(q/p)/(p+q),
Actual=which.max(gnss$Volume))
ggplot(data = peak, aes(q))  +
geom_bar(stat = 'identity')
peak_df <- data.frame(Type = c("Predicted", "Actual"),
Value = c(peak["Predicted", "q"], gnss$Volume[which.max(gnss$Volume)]))
# Plotting
ggplot(data = peak_df, aes(x = Type, y = Value, fill = Type)) +
geom_bar(stat = "identity") +
labs(title = "Predicted vs Actual Values",
x = "Type",
y = "Value") +
theme_minimal()
peak_df <- data.frame(Type = c("Predicted(for moan)", "Actual(for other systems)"),
Value = c(log(q/p)/(p+q), which.max(gnss$Volume)))
ggplot(data = peak_df, aes(x = Type, y = Value, fill = Type)) +
geom_bar(stat = "identity") +
labs(title = "Predicted vs Actual Values",
x = "Type",
y = "Value") +
theme_minimal()
peak_df <- data.frame(Type = c("Predicted(for moan)", "Actual(for other systems)"),
t = c(log(q/p)/(p+q), which.max(gnss$Volume)))
ggplot(data = peak_df, aes(x = Type, y = Value, fill = Type)) +
geom_bar(stat = "identity") +
labs(title = "Period when the number of adopters will reach peak") +
theme_minimal()
peak_df <- data.frame(Type = c("Predicted(for moan)", "Actual(for other systems)"),
t = c(log(q/p)/(p+q), which.max(gnss$Volume)))
ggplot(data = peak_df, aes(x = Type, y = t, fill = Type)) +
geom_bar(stat = "identity") +
labs(title = "Period when the number of adopters will reach peak") +
theme_minimal()
peak_df <- data.frame(Type = c("Predicted(for moan)", "Actual(for other systems)"),
t = c(log(q/p)/(p+q), which.max(gnss$Volume)),
Label = c("For moan", "For other systems"))
ggplot(data = peak_df, aes(x = Type, y = t, fill = Type)) +
geom_bar(stat = "identity") +
geom_label(aes(label = Label), vjust = -0.5, size = 3, fill = "white") +
labs(title = "Period when the number of adopters will reach peak",
x = '') +
geom_label()
peak_df <- data.frame(Type = c("Predicted(for moan)", "Actual(for other systems)"),
t = c(log(q/p)/(p+q), which.max(gnss$Volume)),
Label = c("For moan", "For other systems"))
ggplot(data = peak_df) +
geom_bar(aes(x = Type, y = t), stat = "identity") +
geom_label(aes(label = Label), vjust = -0.5, size = 3, fill = "white") +
labs(title = "Period when the number of adopters will reach peak",
x = '') +
geom_label()
peak_df <- data.frame(Type = c("Predicted(for moan)", "Actual(for other systems)"),
t = c(log(q/p)/(p+q), which.max(gnss$Volume)),
Label = c("For moan", "For other systems"))
ggplot(data = peak_df, aes(x = Type, y = Value, fill = Type)) +
geom_bar(stat = "identity") +
geom_label(aes(label = Label), vjust = -0.5, size = 3, fill = "white") +
labs(title = "Period when the number of adopters will reach peak",
x = '') +
theme_minimal()
peak_df <- data.frame(Type = c("Predicted(for moan)", "Actual(for other systems)"),
t = c(log(q/p)/(p+q), which.max(gnss$Volume)),
Label = c("For moan", "For other systems"))
ggplot(data = peak_df, aes(x = Type, y = t, fill = Type)) +
geom_bar(stat = "identity") +
geom_label(aes(label = Label), vjust = -0.5, size = 3, fill = "white") +
labs(title = "Period when the number of adopters will reach peak",
x = '') +
theme_minimal()
peak_df <- data.frame(Type = c("Predicted(for moan)", "Actual(for other systems)"),
t = c(log(q/p)/(p+q), which.max(gnss$Volume)),
Label = c("For moan", "For other systems"))
ggplot(data = peak_df, aes(x = Type, y = t, fill = Type)) +
geom_bar(stat = "identity") +
geom_label(aes(label = Label), size = 3, fill = "white") +
labs(title = "Period when the number of adopters will reach peak",
x = '') +
theme_minimal()
peak_df <- data.frame(Type = c("Predicted", "Actual"),
t = c(log(q/p)/(p+q), which.max(gnss$Volume)),
Label = c("For moan", "For other systems"))
ggplot(data = peak_df, aes(x = Type, y = t, fill = Type)) +
geom_bar(stat = "identity") +
geom_label(aes(label = Label), size = 3, fill = "white") +
labs(title = "Period when the number of adopters will reach peak",
x = '') +
theme_minimal()
peak_df <- data.frame(Type = c("Predicted", "Actual"),
t = c(log(q/p)/(p+q), which.max(gnss$Volume)),
Label = c("For moan", "For other systems"))
ggplot(data = peak_df, aes(x = Type, y = t, fill = 'lightblue')) +
geom_bar(stat = "identity") +
geom_label(aes(label = Label), size = 3, fill = "white") +
labs(title = "Period when the number of adopters will reach peak",
x = '') +
theme_minimal()
peak_df <- data.frame(Type = c("Predicted", "Actual"),
t = c(log(q/p)/(p+q), which.max(gnss$Volume)),
Label = c("For moan", "For other systems"))
ggplot(data = peak_df, aes(x = Type, y = t)) +
geom_bar(stat = "identity",  fill = 'lightblue') +
geom_label(aes(label = Label), size = 3, fill = "white") +
labs(title = "Period when the number of adopters will reach peak",
x = '') +
theme_minimal()
library(ggplot2)
# Assuming you have p and q values
p <- 30
q <- 70
# Creating a data frame for the labels and values
pie_data <- data.frame(Category = c("p", "q"),
Value = c(p, q))
# Creating a pie chart using ggplot2
ggplot(pie_data, aes(x = "", y = Value, fill = Category)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
labs(title = "Distribution of p and q values") +
scale_fill_manual(values = c("blue", "red"), name = "Category") +
theme_void() +
theme(legend.position = "bottom")
library(ggplot2)
# Assuming you have p and q values
p <- 30
q <- 70
# Creating a data frame for the labels and values
pie_data <- data.frame(Category = c("p", "q"),
Value = c(p, q))
# Creating a pie chart using ggplot2
ggplot(pie_data, aes(x = "", y = Value, fill = Category)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
labs(title = "Distribution of p and q values") +
theme_void() +
theme(legend.position = "bottom")
knitr::opts_chunk$set(echo = TRUE, warning=F, message = F)
library(dplyr)
library(ggplot2)
library(diffusion)
library(readxl)
library(gridExtra)
library(grid)
gnss_unit_pirce <- mean(c(500, 2000)) # taking the mean unit price for each
indoor_mapping_tech_unit_price <- mean(c(8000, 30000))
surveying_equipment_unit_price <- mean(c(200, 1400))
gnss <- read_excel('gnss.xlsx', sheet='Data') %>%
slice(-c(1:2)) %>% # remove unmecessary rows
rename("Year" =`GNSS & positioning market revenue by technology 2013-2020`,
"GNSS" = `...2`, "Indoor" = `...3` , "Surveying" = `...4`) %>%
mutate(across(everything(), ~gsub("\\*$", "", .))) %>% # remove * to convert into int
mutate(Year = as.integer(Year), # type conversions
GNSS = as.double(GNSS) ,
Indoor = as.double(Indoor) ,
Surveying = as.double(Surveying)) %>%
mutate(GNSS = GNSS / gnss_unit_pirce, # getting quantity for each
Indoor = Indoor / indoor_mapping_tech_unit_price,
Surveying = Surveying / surveying_equipment_unit_price) %>%
group_by(Year) %>%
mutate(Volume = sum(GNSS, Indoor, Surveying))%>%
ungroup() %>%
mutate(Cumulative_Volume = cumsum(Volume))
# grouping by the year and calculating the total quantity over all segments
head(gnss, 3)
g0 <- ggplot(data = gnss, aes(x = Year, y = Volume)) +
geom_bar(stat = 'identity', fill = 'lightblue') +
labs(y = 'Volume(bln units)', x = '' ) +
theme(panel.background = element_blank()) + theme_minimal()
g1 <- ggplot(data = gnss, aes(x = Year, y = Cumulative_Volume)) +
geom_bar(stat = 'identity', fill = 'lightblue') +
labs(y = 'Cumulative Volume(bln units)' , x = '') +
theme(panel.background = element_blank()) + theme_minimal()
grid.arrange(g0, g1, ncol = 2,
top = textGrob('Positioning systems adoption over time',
gp = gpar(fontsize = 16)))
diff_m = diffusion(gnss$Volume) # fit the model
p=round(diff_m$w,4)[1] # get each parameter from w={p,q,m} parameter set
q=round(diff_m$w,4)[2]
m=round(diff_m$w,4)[3]
diff_m
bass.f <- function(t,p,q){
((p+q)^2/p)*exp(-(p+q)*t)/
(1+(q/p)*exp(-(p+q)*t))^2
}
bass.F <- function(t,p,q){
(1-exp(-(p+q)*t))/
(1+(q/p)*exp(-(p+q)*t))
}
g2 <- ggplot(data.frame(t = c(1:length(gnss$Year))), aes(t)) +
stat_function(fun = bass.f, args = c(p, q)) +
labs(title = 'f(t)') +
theme(panel.background = element_blank()) + theme_minimal()
g3 <- ggplot(data.frame(t = c(1:length(gnss$Year))), aes(t)) +
stat_function(fun = bass.F, args = c(p, q)) +
labs(title = 'F(t)') +
theme(panel.background = element_blank()) + theme_minimal()
grid.arrange(g2,g3, ncol = 2,
top = textGrob('Bass Functions',
gp = gpar(fontsize = 16)))
gnss$a_t = bass.f(1:length(gnss$Year), p , q )*m
gnss$A_t = bass.F(1:length(gnss$Year), p , q )*m
g4 <- ggplot(data = gnss, aes(x = Year, y = Volume)) +
geom_bar(stat = 'identity', fill = 'lightblue') +
geom_point(mapping = aes(x=Year, y=a_t), color = 'red') +
labs(y = 'Volume(bln units)', x = '') +
theme(panel.background = element_blank(),
axis.text.y = element_text(size = 8)) + theme_minimal()
g5 <- ggplot(data = gnss, aes(x = Year, y = Cumulative_Volume)) +
geom_bar(stat = 'identity', fill = 'lightblue') +
geom_point(mapping = aes(x=Year, y=A_t), color = 'red') +
labs(y='Cumulative Volume(bln units)', x='') +
theme(panel.background = element_blank(),
axis.text.y = element_text(size = 8)) + theme_minimal()
grid.arrange(g4, g5, ncol = 2,
top = textGrob('Diffusion Prediction for Innovation',
gp = gpar(fontsize = 16)))
peak_df <- data.frame(Type = c("Predicted", "Actual"),
t = c(log(q/p)/(p+q), which.max(gnss$Volume)),
Label = c("For Moan system", "For other systems"))
ggplot(data = peak_df, aes(x = Type, y = t)) +
geom_bar(stat = "identity",  fill = 'lightblue') +
geom_label(aes(label = Label), size = 3, fill = "white") +
labs(title = "Period when the number of adopters will reach peak",
x = '') +
theme_minimal()
pie_data <- data.frame(Rates = c("Innovation rate", "Immitation rate"),
Value = c(p, q))
ggplot(pie_data, aes(x = "", y = Rates, fill = Category)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
labs(title = "Distribution of p and q values") +
theme_void() +
theme(legend.position = "bottom")
pie_data <- data.frame(Rates = c("Innovation rate", "Immitation rate"),
Value = c(p, q))
ggplot(pie_data, aes(x = "", y = Rates, fill = Rates)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
labs(title = "Distribution of p and q values") +
theme_void() +
theme(legend.position = "bottom")
pie_data <- data.frame(Rates = c("Innovation", "Immitation"),
Value = c(p, q))
ggplot(pie_data, aes(x = "", y = Rates, fill = Rates)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
labs(title = "Expected Distribution of Innovator and Immitator adopters") +
theme_void() +
theme(legend.position = "bottom")
pie_data <- data.frame(Rates = c("Innovation", "Immitation"),
Value = c(p, q))
ggplot(pie_data, aes(x = "", y = Rates, fill = Rates)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
labs(title = "Expected Distribution of Innovator and Immitator adopters") +
theme_void()
p
q
pie_data <- data.frame(Rates = c("Innovation", "Imitation"),
Value = c(p, q))
ggplot(pie_data, aes(x = "", y = Rates, fill = Rates)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
labs(title = "Expected Distribution of Innovator and Imitator adopters") +
theme_void()
pie_data <- data.frame(Rates = c("Innovation", "Imitation"),
Value = c(p, q))
ggplot(pie_data, aes(x = "", y = Value, fill = Rates)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
labs(title = "Expected Distribution of Innovator and Imitator adopters") +
theme_void()
